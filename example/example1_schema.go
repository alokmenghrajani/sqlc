// THIS FILE WAS AUTOGENERATED - ANY EDITS TO THIS WILL BE LOST WHEN IT IS REGENERATED
// AT 2016-09-27 12:10:52.132351159 -0700 PDT USING sqlc VERSION 0.1.5



package main

import (
	"github.com/alokmenghrajani/sqlc/sqlc"
	"strings"
)



type books struct {
	ID sqlc.IntField

	TITLE sqlc.StringField

	AUTHOR sqlc.IntField

	Id int `db:"id"`
	Title string `db:"title"`
	Author int `db:"author"`

	alias string
}

func (t *books) IsSelectable() {}

func (t *books) Name() string {
	return "books"
}

func (t *books) As(a string) sqlc.Selectable {
	return &books{

		ID: t.ID,

		TITLE: t.TITLE,

		AUTHOR: t.AUTHOR,

		alias:a,
	}
}

func (t *books) Alias() string {
	return t.alias
}

func (t *books) MaybeAlias() string {
	if t.alias == "" {
		return "books"
	} else {
		return t.alias
	}
}

/////


func (t *books) StringField(name string) sqlc.StringField {
	return sqlc.String(BOOKS, strings.ToUpper(name))
}

func (t *books) IntField(name string) sqlc.IntField {
	return sqlc.Int(BOOKS, strings.ToUpper(name))
}

func (t *books) Int64Field(name string) sqlc.Int64Field {
	return sqlc.Int64(BOOKS, strings.ToUpper(name))
}

func (t *books) TimeField(name string) sqlc.TimeField {
	return sqlc.Time(BOOKS, strings.ToUpper(name))
}


/////

func (t *books) Fields() []sqlc.Field {
	return []sqlc.Field{

		sqlc.Int(BOOKS, "ID"),

		sqlc.String(BOOKS, "TITLE"),

		sqlc.Int(BOOKS, "AUTHOR"),

	}
}




var __books = &books{}
var BOOKS = &books {


	ID: sqlc.Int(__books, "ID"),

	TITLE: sqlc.String(__books, "TITLE"),

	AUTHOR: sqlc.Int(__books, "AUTHOR"),


}
