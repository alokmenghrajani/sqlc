// THIS FILE WAS AUTOGENERATED - ANY EDITS TO THIS WILL BE LOST WHEN IT IS REGENERATED
// AT 2016-09-27 00:27:29.079659071 -0700 PDT USING sqlc VERSION 0.1.5



package main

import (
	"github.com/alokmenghrajani/sqlc/sqlc"
	"strings"
)



type authors struct {
	
	ID sqlc.IntField
	
	NAME sqlc.StringField
	
	alias string
}

func (t *authors) IsSelectable() {}

func (t *authors) Name() string {
	return "authors"
}

func (t *authors) As(a string) sqlc.Selectable {
	return &authors{
		
		ID: t.ID,
		
		NAME: t.NAME,
		
		alias:a,
	}
}

func (t *authors) Alias() string {
	return t.alias
}

func (t *authors) MaybeAlias() string {
	if t.alias == "" {
		return "authors"
	} else {
		return t.alias
	}
}

/////


func (t *authors) StringField(name string) sqlc.StringField {
	return sqlc.String(AUTHORS, strings.ToUpper(name))
}

func (t *authors) IntField(name string) sqlc.IntField {
	return sqlc.Int(AUTHORS, strings.ToUpper(name))
}

func (t *authors) Int64Field(name string) sqlc.Int64Field {
	return sqlc.Int64(AUTHORS, strings.ToUpper(name))
}

func (t *authors) TimeField(name string) sqlc.TimeField {
	return sqlc.Time(AUTHORS, strings.ToUpper(name))
}


/////

func (t *authors) Fields() []sqlc.Field {
	return []sqlc.Field{
		
		sqlc.Int(AUTHORS, "ID"),
		
		sqlc.String(AUTHORS, "NAME"),
		
	}
}




var __authors = &authors{}
var AUTHORS = &authors {
	

	ID: sqlc.Int(__authors, "ID"),

	NAME: sqlc.String(__authors, "NAME"),


}

// Added by Alok


//func (db *DB) InsertInto(t *authors) InsertSetStep_authors {
//	return &insert{db: db, table: t}
//}


